- user = User.first
- class_type = comment.commentable.type?

- if can? :read, comment
  .comment-wrapper
    .comment
      .col-xs-8
        .content
          = comment.content
      .col-xs-4
        .traction
          %h4{class: ("doit" if false)}
            #{comment.opinion} / #{comment.commentable.threshold}
          .indicator
            - if comment.doit?
              = image_tag "doit.png"
        .controls
          - if comment.is_suggestion?
            - opinion = Opinion.where(opinionable_type: "Comment", opinionable_id: comment.id, user_id: current_user.id).first
            .btn.btn-sm.btn-like{class: "btn-#{class_type} #{(opinion && opinion.positive) ? 'btn-on' : 'btn-off'}"}
              %span.flaticon-go
            .btn.btn-sm.btn-dislike{class: "btn-#{class_type} #{(opinion && opinion.positive) ? 'btn-on' : 'btn-off'}"}
              %span.flaticon-go1
      .signature
        .user
          - if comment.doit?
            = image_tag("profile_default.png")
            .name
              %b= user.full_name
              %br
              (#{user.job_title})
          - else
            = image_tag("profile_default.png")
            .name
              Anonymous User
              %br
              (Contributor)
        .options
          - if can? :update, comment
            = link_to '#' do
              .btn.btn-sm{class: "btn-#{class_type}"}
                %span.flaticon-edit7
          - if can? :destroy, comment
            = link_to comment, method: :delete, data: { confirm: "Are you sure about this?"}, remote: true do
              .btn.btn-sm{class: "btn-#{class_type}"}
                %span.flaticon-delete48
