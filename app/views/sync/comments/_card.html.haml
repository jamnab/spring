- user = User.first
- class_type = 'main'

- if can? :read, comment
  .comment-wrapper
    .comment{class: "inline_comment_#{comment.id} suggestion_#{comment.suggestion}"}
      .col-xs-12
        .content{class: ("doit" if comment.doit?)}
          .commenter
            .user
              - if comment.doit?
                = image_tag("profile-icon.png")
                /.name
                /  %b= user.full_name
                /  %br
                /  (#{user.job_title})
                .speech
                  = comment.content
              - else
                = image_tag("profile-icon.png")
                /.name
                /  Anonymous
                /  %br
                /  (Contributor)
                .speech
                  = comment.content
              - if can? :update, comment
                = link_to edit_comment_path(comment), remote: true do
                  .btn.btn-sm{class: "btn-#{class_type}"}
                    %i.fa.fa-pencil
              - if can? :destroy, comment
                = link_to comment, method: :delete, data: { confirm: "Are you sure about this?"}, remote: true do
                  .btn.btn-sm{class: "btn-#{class_type}"}
                    %i.fa.fa-trash

      .col-xs-12
        - if comment.is_suggestion?
          .traction
            %h4
              #{comment.opinion} / #{comment.commentable.threshold}
            .indicator
              - if comment.doit?
                = image_tag "launch.png"
          .controls
            - opinion = Opinion.where(opinionable_type: "Comment", opinionable_id: comment.id, user_id: current_user.id).first
            = form_for Opinion.new, remote: true do |f|
              = f.hidden_field :positive, value: 'true'
              = f.hidden_field :user_id, value: current_user.id
              = f.hidden_field :opinionable_id, value: comment.id
              = f.hidden_field :opinionable_type, value: 'Comment'
              .btn.btn-sm.btn-like{class: "btn-#{class_type} #{(opinion && opinion.positive) ? 'btn-on' : 'btn-off'}"}
                %span.fa.fa-angle-up
              .btn.btn-sm.btn-dislike{class: "btn-#{class_type} #{(opinion && !opinion.positive) ? 'btn-on' : 'btn-off'}"}
                %span.fa.fa-angle-down
      -#.commenter
      -#  .user
      -#    - if comment.doit?
      -#      = image_tag("profile-icon.png")
      -#      .name
      -#        %b= user.full_name
      -#        %br
      -#        (#{user.job_title})
      -#    - else
      -#      = image_tag("profile-icon.png")
      -#      .name
      -#        Anonymous
      -#        %br
      -#        (Contributor)
      -#  .options
      -#    - if can? :update, comment
      -#      = link_to edit_comment_path(comment), remote: true do
      -#        .btn.btn-sm{class: "btn-#{class_type}"}
      -#          %span.flaticon-edit45
      -#    - if can? :destroy, comment
      -#      = link_to comment, method: :delete, data: { confirm: "Are you sure about this?"}, remote: true do
      -#        .btn.btn-sm{class: "btn-#{class_type}"}
      -#          %span.flaticon-delete48
