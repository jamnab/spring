- user = post.user
- class_type = "approval-#{post.approved.to_s}"
/ # - class_type = "project" if post.post_type == Post::PROJECT
/ # - class_type = "fun" if post.post_type == Post::FUN
/ # - class_type = "facility" if post.post_type == Post::FACILITY

- if can? :read, post
  - opinion = Opinion.where(opinionable_type: "Post", opinionable_id: post.id, user_id: current_user.id).first
  - post_opinions = post.opinions
  - total_count = post_opinions.count
  - if total_count > 0
    - pos_count = post_opinions.like.count
    - neg_count = post_opinions.dislike.count
    - pos_progress = pos_count * 100 / total_count
    - neg_progress = neg_count * 100 / total_count
  - else
    - pos_progress = 0
    - neg_progress = 0

  / - if @viewmode == 'list'
  .post-wrapper{class: "#{('listview' if @viewmode == 'list')} #{('doithidden' if post.doit?)} col-xl-2 col-md-3 col-sm-4"}
    .post{class: "#{class_type} #{post.id}", id: class_type}
      .header
        %span.title
          - if post.doit?
            / launch item, pre-approve and post approve
            - if post.launch_approved
              Launched Item - #{post.action_date.nil? ? 'Pending Date' : post.action_date.nil}
            - else
              Pending Launch Approval
          - elsif post.graveyard
            / archived post
            Archived Post
          - elsif !opinion.nil? && opinion.positive
            / following, voted positive
            - if post.departments.empty?
              No Related Department
            - else
              = post.departments * ', '
          - elsif post.approved
            / in ideas
            - if post.departments.empty?
              No Related Department
            - else
              = post.departments * ', '
          - else
            / pending listing approval
            Pending Listing Approval
        /.post-badge{class: ("doit" if post.doit?)}
        /  - if post.doit?
        /    / launch item, pre-approve and post approve
        /    = image_tag 'launch.png'
        /  - elsif post.graveyard
        /    / archived post
        /    .fa.fa-archive
        /  - elsif !opinion.nil? && opinion.positive
        /    / following, voted positive
        /    .fa.fa-eye
        /  - elsif post.approved
        /    / in ideas
        /    .fa.fa-lightbulb-o
        /  - else
        /    / pending listing approval
        /    .fa.fa-clock-o
      /.progress
      /  - if !opinion.nil?
      /    .progress-bar{style: "width: #{pos_progress}%;", class: "progress-positive"}
      /    .progress-bar{style: "width: #{neg_progress}%;", class: "progress-negative"}
      .content
        /.carousel.slide.carousel-fade{id: "carousel-post-#{post.id}", class: (@viewmode == 'list' ? 'col-xs-2' : 'col-xs-12')}
        .carousel.slide.carousel-fade{id: "carousel-post-#{post.id}"}
          %ol.carousel-indicators
            - if post.pictures.empty?
              %li.active{"data-target"=> "#carousel-post-#{post.id}", "data-slide-to"=>"0"}
            - else
              -post.pictures.each_with_index do |pic,index|
                - if index == 0
                  %li.active{"data-target"=> "#carousel-post-#{post.id}", "data-slide-to"=> index}
                - else
                  %li{"data-target"=> "#carousel-post-#{post.id}", "data-slide-to"=> index}
          .carousel-inner.image-wrapper
            - if post.pictures.empty?
              .item.active
                = image_tag ("no_image.png")
            - else
              - post.pictures.each_with_index do |pic,index|
                .item{class: ("active" if index == 0)}
                  %a{"href"=> pic.image.url(:post_image), "data-lightbox" => post.title}
                    = image_tag pic.image.url(:post_image)
        %div{ class: (@viewmode == 'list' ? 'col-xs-10' : 'col-xs-12') }
          %h4.bolded= post.title
          = post.content

        .options
          / = form_for post, remote: true do |f|
          /  = f.hidden_field :graveyard, value: 'false'
          - if (can? :update, post) && !post.launch_approved
            = link_to edit_post_path(post), remote:true do
              .btn.btn-sm.post-loading{id: "#{post.id}",class: "popover-trigger btn-#{class_type}", data: {content: "Edit", placement: "top", trigger: "hover"}}
                %span.flaticon-edit45

          - if can? :destroy, post
            = link_to post, method: :delete, class: "popover-trigger", data: {confirm: "Are you sure about this?", content: "Delete", placement: "top", trigger: "hover"}, remote: true do
              .btn.btn-sm.post-loading{id: "#{post.id}",class: "btn-#{class_type}"}
                %span.flaticon-delete48

          - if post.doit? && !post.launch_approved
            = form_tag judge_post_path(post), remote: true, class: 'form-inline' do
              = hidden_field_tag 'viewmode', @viewmode
              = hidden_field_tag 'launch_approved', 'true'
              .form-group
                = text_field_tag 'action_date', nil, {class: 'form-control', placeholder: 'pick action date ...' , 'data-provide' => 'datepicker'}
              .btn.btn-sm.post-loading.btn-launch-approve{id: "#{post.id}", class: "popover-trigger btn-#{class_type} btn-off", data: {content: "Approve for Launch", placement: "bottom", trigger: "hover"}}
                = image_tag 'launch.png'

          / - fav = post.favourited?(current_user)
          / - if fav.nil?
          /   = link_to '#' do
          /     .btn.btn-sm.btn-off.btn-fav.post-loading{id: "#{post.id}",class: "popover-trigger btn-#{class_type}", data: {content: "Favourite", placement: "top", trigger: "hover"}}
          /       %span.flaticon-favourites7
          /   = form_for Favourite.new, remote: true do |f|
          /     = f.hidden_field :fav_post_id, value: post.id
          /     = f.hidden_field :user_id, value: current_user.id
          / - else
          /   = link_to fav, class: "popover-trigger", data: {content: "Unfavourite", placement: "top", trigger: "hover"}, method: :delete, remote: true do
          /     .btn.btn-sm.btn-on.post-loading{id: "#{post.id}",class: "btn-#{class_type}"}
          /       %span.flaticon-favourites7
        .departments
          - post.departments.each do |department|
            .badge
              = department
      .signature
        .user
          - if !post.anonymous || post.doit?
            = image_tag(user.profile_image_url)
            .name
              %b= user.full_name
              %br
              (#{user.job_title})
          - else
            = image_tag("profile-icon.png")
            .name
              Anonymous User
              %br
              (Contributor)
        .options
          - if opinion.nil?
            - if !post.approved
              - if can? :update, current_organization
                = form_tag judge_post_path(post), remote: true do
                  = hidden_field_tag 'viewmode', @viewmode
                  = hidden_field_tag 'approved', 'true'
                  .btn.btn-sm.post-loading.btn-approve{id: "#{post.id}", class: "popover-trigger btn-#{class_type} btn-off", data: {content: "Approve", placement: "bottom", trigger: "hover"}}
                    %span.fa.fa-check
                = form_tag judge_post_path(post), remote: true do
                  = hidden_field_tag 'viewmode', @viewmode
                  = hidden_field_tag 'approved', 'false'
                  .btn.btn-sm.post-loading.btn-approve{id: "#{post.id}", class: "popover-trigger btn-#{class_type} btn-off", data: {content: "Disapprove", placement: "bottom", trigger: "hover"}}
                    %span.fa.fa-times
            - else
              - opinion = Opinion.where(opinionable_type: "Post", opinionable_id: post.id, user_id: current_user.id).first
              = form_for Opinion.new, remote: true do |f|
                = hidden_field_tag 'viewmode', @viewmode
                = f.hidden_field :positive, value: 'true'
                = f.hidden_field :user_id, value: current_user.id
                = f.hidden_field :opinionable_id, value: post.id
                = f.hidden_field :opinionable_type, value: 'Post'
                .btn.btn-sm.post-loading.btn-dislike{id: "#{post.id}", disabled: ("disabled" if !opinion.nil?), class: "popover-trigger btn-#{class_type} #{(opinion && !opinion.positive) ? 'btn-on' : 'btn-off'}", data: {content: "Downvote", placement: "bottom", trigger: "hover"}}
                  / %span.fa.fa-thumbs-down
                  = image_tag "trash-icon.png"
                .btn.btn-sm.post-loading.btn-like{id: "#{post.id}", disabled: ("disabled" if !opinion.nil?), class: "popover-trigger btn-#{class_type} #{(opinion && opinion.positive) ? 'btn-on' : 'btn-off'} #{'btn-like'}", data: {content: "Upvote", placement: "bottom", trigger: "hover"}}
                  / %span.fa.fa-thumbs-up
                  = image_tag "launch-icon.png"
          - else
            = link_to dashboard_path(:populate_disucssion_id => post.id), remote: true, class: "popover-trigger post-discussion-toggler", data: {content: "Discussion", placement: "top", trigger: "hover"} do
              .btn.btn-sm.post-loading.btn-counter{id: "#{post.id}",class: "btn-#{class_type} #{'btn-doit' if post.alt_doit?}"}
                /%span.flaticon-comments8
                = image_tag "comment-icon.png"
                .count
                  = post.comments.count
