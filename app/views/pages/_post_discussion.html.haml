- post = @post
- if !@post.nil?
  #post-discussion.modal.fade
    .modal-dialog.col-sm-8.col-sm-offset-2.col-md-6.col-md-offset-3
      .modal-content{class: "#{post.id}"}
        .modal-header
          %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
            %span{"aria-hidden" => "true"} Ã—
          %h4.modal-title
            = post.title
        .modal-body
          .area.post
            #carousel-discussion.carousel.slide.carousel-fade
              .carousel-inner
                - if post.pictures.empty?
                  .item.active
                    = image_tag ("ph-icon.png")
                - else
                  - post.pictures.each_with_index do |pic,index|
                    .item{class: ("active" if index == 0)}
                      %a{"href"=> pic.image.url, "data-lightbox" => "#{post.title}-discussion"}
                        = image_tag pic.image.url(:post_image)
              %ol.carousel-indicators
                - if post.pictures.empty?
                  %li.active{"data-target"=> "#carousel-discussion", "data-slide-to"=>"0"}
                - else
                  - post.pictures.each_with_index do |pic,index|
                    - if index == 0
                      %li.active{"data-target"=> "#carousel-discussion", "data-slide-to"=> index}
                    - else
                      %li{"data-target"=> "#carousel-discussion", "data-slide-to"=> index}
            %p
              = post.content
            .poster
              .user
                - if !post.anonymous || post.doit?
                  = image_tag(post.user.profile_image_url)
                  .name
                    %span= post.user.full_name
                    %br
                    .job
                      #{post.user.job_title}
                - else
                  = image_tag("profile-icon.png")
                  .name
                    %span Anonymous User
                    %br
                    .job
                      Contributor
          .area.comments
            .filter-sort-comments
              - @post = post
              /= render 'comments_filter_sort', :collection => @post
              - if @sort != "upvoted"
                = sync_new partial: "card", resource: Comment.new, scope:post
              - if @post.alt_doit?
                - comments = post.comments.order("opinion DESC")
              - else
                - comments = post.comments.order("created_at DESC")
              - if post.comments.empty?
                .temp
                  = image_tag 'comment-icon.png', class: "empty-comment"
                  %p Post a comment to start a discussion.
              - else
                - comments.limit(4).each do |comment|
                  = sync partial: "card", resource: comment

        .modal-footer
          = form_for Comment.new, remote: true do |f|
            = f.hidden_field :commentable_id, :value => post.id
            = f.hidden_field :commentable_type, :value => "Post"
            .field.col-xs-12
              = f.text_area :content, class: "form-control", placeholder: "Enter comment...", rows: 3, maxlength: 200

            / .field.col-xs-12.text-right
            /   = check_box_tag("comment[anonymous]", "1", false, class: "checkbox")
            /   = label_tag :checkbox, "Remain Anonymous"
            .actions.col-xs-12.text-right
              = f.submit 'Post', class: "btn btn-main on loading-comment-submit", id: "comment_plain", :name =>"plain"
              / = f.submit 'Post Alternative', class: " .comment-loading btn btn-main on loading-comment-submit", id: "comment_suggestion", :name =>"suggestion"
