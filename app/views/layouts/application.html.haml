!!!
%html
  %head
    %title Pin.DoIt
    = stylesheet_link_tag    'application', media: 'all'
    = stylesheet_link_tag    'flaticon/flaticon.css'
    = javascript_include_tag 'application'
    = javascript_include_tag :defaults
    = javascript_include_tag Sync.adapter_javascript_url
    = csrf_meta_tags
    = favicon_link_tag 'favicon.png'
  %body
    .sidebar-icons
      %a.sidebar-toggler
        .icon.fa.fa-bars
        .icon.fa.fa-times-circle-o.hidden
      .navicons
        - if current_user
          = link_to '#' do
            %span.flaticon-home7
          = link_to '#' do
            %span.flaticon-star6
          = link_to '#' do
            %span.flaticon-lock9
          = link_to '#' do
            %span.flaticon-line31

          .logo.brand-link

          = link_to '#', class: "logout-link" do
            %span.flaticon-logout13
        - else
          = link_to '#', data: {target: "#login", toggle: "modal"} do
            %span.flaticon-clock6
          = link_to '#', data: {target: "#register", toggle: "modal"} do
            %span.flaticon-clock6

    .sidebar
      .user-wrapper
        .user
          = image_tag("//placehold.it/60x60")
          - if current_user
            .name
              John Smith
            .username
              (jsmith)
          - else
            .name
              Guest User
            .username
              Please Login
      .sidenav
        - if current_user
          = link_to :dashboard do
            Home
          = link_to '#' do
            My Favoriates
          = link_to '#' do
            Archive
          = link_to '#' do
            Scoreboard

          .brand-link

          = link_to :logout, class: "logout-link" do
            Logout
        - else
          = link_to '#', data: {target: "#login", toggle: "modal"} do
            Log In
          = link_to '#', data: {target: "#register", toggle: "modal"} do
            Register
    .body-wrapper
      %nav.navbar.navbar-default
        .container
          .navbar-header
            %button.navbar-toggle{"data-target" => "#navbar-collapse", "data-toggle" => "collapse", type: "button"}
              %span.sr-only Toggle navigation
              %span.icon-bar
              %span.icon-bar
              %span.icon-bar

            .nav.navbar-nav

              %li.dropdown
                %a.dropdown-toggle{"data-toggle" => "dropdown", href: "#"}
                  #filter-posts.option.filter
                    .text{style: "float:left;"}
                      ALL
                    %span.caret
                %ul.dropdown-menu{:role => "menu"}
                  %li
                    %a{href: "#", id: "filter-post-all"} ALL
                  %li
                    = link_to "WORK",dashboard_path(:query => "0"),remote: true, :id =>"filter-post-work"                   
                    / %a{href: "#", id: "filter-post-work"} WORK (request.path =="/dashboard")
                  %li
                    = link_to "PLAY",dashboard_path(:query => "1"),remote: true, :id =>"filter-post-play"
    
                  %li
                    = link_to "FACILITY",dashboard_path(:query => "2"),remote: true, :id =>"filter-post-facility"
                  %li
                    %a{href: "#", id: "filter-post-doit"} DOIT

              %li.dropdown
                %a.dropdown-toggle{"data-toggle" => "dropdown", href: "#"}
                  #sort-posts.option
                    NEWEST
                    %span.caret
                %ul.dropdown-menu{:role => "menu"}
                  %li
                    = link_to "NEWEST",dashboard_path(:sort => "newest"),remote: true, :id =>"sort-post-newest"
                    

                  %li
                    %a{href: "#", id: "sort-post-dicussed"} MOST DISCUSSED
                  %li
                    = link_to "MOST UPVOTED",dashboard_path(:sort => "upvoted"),remote: true, :id =>"sort-post-updated"

            / #search.search.search-open
            /   %form
            /     %input#search.search-input{:name => "search", :placeholder => "Enter your search term...", :type => "search", :value => ""}/
            /     %input.search-submit{:type => "submit", :value => ""}/
            /     %span.sb-icon-search
            /       .fa.fa-search

          #navbar-collapse.collapse.navbar-collapse.pull-right
            %ul.nav.navbar-nav.navbar-right
              - if current_user
                / %li.divider-vertical
                %li
                  = form_tag search_path, class: "form-inline", remote: (request.path == '/search'), :method => :get do
                    .form-group
                      .input-group
                        = text_field_tag :query, params[:query], class: "form-control", id: "search", placeholder: "search ..."
                        / %input#search.form-control{:placeholder => "search ...", :type => "text"}
                    %button.btn.btn-main{:type => "submit"}
                      .fa.fa-search
      
                %li= link_to "Logout", :logout
              - else
                / %li.divider-vertical
                %li
                  = link_to '#', data: {target: "#register", toggle: "modal"} do
                    Register
                / %li.divider-vertical
                %li
                  = link_to '#', data: {target: "#login", toggle: "modal"} do
                    Log In

          / .pinned-toggler.pull-right
          /   %input{:checked => "checked", :name => "my-checkbox", :type => "checkbox"}

      / - if notice
      /   .alert.alert-warning
      /     %a.close{"data-dismiss" => "alert", href: "#"} ×
      /     = notice

      .content-wrapper
        = yield

    #login.modal.fade
      .modal-dialog
        .modal-content
          .modal-header
            %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
              %span{"aria-hidden" => "true"} ×
            %h4.modal-title Log In

          = form_for UserSession.new do |f|
            .modal-body
              .field
                = f.label :username
                = f.text_field :username, class: "form-control", id: "login_username"
              .field
                = f.label :password
                = f.password_field :password, class: "form-control"
            .modal-footer
              .actions
                = f.submit 'Log In', class: "btn btn-main"
                / %button.btn.btn-main.off{"data-dismiss" => "modal", :type => "button"} Cancel

    #register.modal.fade
      .modal-dialog
        .modal-content
          .modal-header
            %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
              %span{"aria-hidden" => "true"} ×
            %h4.modal-title Register
          = form_for User.new do |f|

            - if !params[:organization_token].nil?
              = hidden_field :organization_token, value: params[:organization_token]

            .modal-body.row
              .field.col-xs-6
                = f.label :username
                = f.text_field :username, class: "form-control", id: "register_username"
              .field.col-xs-6
                = f.label :email
                = f.text_field :email, class: "form-control"
              .field.col-xs-6
                = f.label :first_name
                = f.text_field :first_name, class: "form-control"
              .field.col-xs-6
                = f.label :last_name
                = f.text_field :last_name, class: "form-control"
              .field.col-xs-6
                = f.label :password
                = f.password_field :password, class: "form-control"
              .field.col-xs-6
                = f.label :password_confirmation
                = f.password_field :password_confirmation, class: "form-control"
              .field.col-xs-12
                = f.label :organization_name
                = f.text_field :organization_name, class: "form-control"
              %hr
              .field.col-xs-12
                = check_box_tag("user[is_manager]", "1", false, class: "checkbox")
                = label_tag :checkbox, "I am the manager of this organization."
              %h5.text-center
                %b OR
              .field.col-xs-12
                = f.label 'Organization access token'
                = f.text_field :organization_token, class: "form-control"
            .modal-footer
              .actions
                = f.submit 'Register', class: "btn btn-main"
                / %button.btn.btn-main.off{"data-dismiss" => "modal", :type => "button"} Cancel

    #post-discussion.modal.fade
      .modal-dialog
        .modal-content
          .modal-header
            %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
              %span{"aria-hidden" => "true"} ×
            %h4.modal-title
              Post Title Discussion
          .modal-body.row
            = form_for Comment.new do |f|
              = f.hidden_field :suggestion, value: false
              .field.col-xs-12
                = f.text_area :content, class: "form-control", placeholder: "Enter your comment here ...", rows: 3
              / .field.col-xs-12.text-right
              /   = check_box_tag("comment[anonymous]", "1", false, class: "checkbox")
              /   = label_tag :checkbox, "Remain Anonymous"
              .actions.col-xs-12.text-right
                = f.submit 'Post Plain Comment', class: "btn btn-main off", id: "comment_plain"
                = f.submit 'Post as Suggestion', class: "btn btn-main on", id: "comment_suggestion"
          .modal-footer
            .comment-sorts
              = link_to '#' do
                .btn.btn-sm.btn-main.on
                  NEWEST
              = link_to '#' do
                .btn.btn-sm.btn-main.off
                  MOST UPVOTED
            .comment-filters
              = link_to '#' do
                .btn.btn-sm.btn-main.on
                  ALL
              = link_to '#' do
                .btn.btn-sm.btn-main.off
                  PLAIN
              = link_to '#' do
                .btn.btn-sm.btn-main.off
                  SUGGESTION
            = render "comments/card"
            = render "comments/card"
