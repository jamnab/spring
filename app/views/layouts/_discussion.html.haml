.tag-index
  - @project.tags.uniq.each do |tag|
    .tag-index-item
      \##{tag.name}(#{tag.tag_entries.count})

#posts.col-xs-3
  .row.posts-header
    = form_tag @project, class: "form-inline" do
      .form-group
        = link_to '#', data: {target: "#new-post", toggle: "modal"} do
          .btn.btn-success.btn-sm
            New Post

      .form-group
        = text_field_tag :query, nil, class: "form-control", placeholder: "Search posts here ..."
      %button#search-btn.btn.btn-sm.btn-primary{type: 'submit'}
        .fa.fa-search
  - @project.posts.each do |post|
    = render "posts/card", post: post

#post.col-xs-9
  - if @post
    %h2.title
      = @post.title
    %h5.content
      = simple_format(@post.content, {}, wrapper_tag: "div")
    %hr
    %h5
      Tags:
    .tags
      - @post.tags.each do |tag|
        .tag-pill
          = tag.name
    - if can? :update, @post
      %br
      = form_tag tag_entries_path, method: :post, class: "form-inline" do
        = hidden_field_tag 'tag_entry[taggable_id]', @post.id
        = hidden_field_tag 'tag_entry[taggable_type]', @post.class.to_s
        = hidden_field_tag 'project_id', @project.id
        .form-group
          = text_field_tag :name, nil, {class: "form-control", placeholder: "Enter tag ..."}
        = submit_tag 'Add Tag', class: "btn btn-success"
    #post-divider
      .options
        .fa.fa-edit
        .fa.fa-trash-o
    #comment-filter
      %h4
        %b Comments
      #new-comment-trigger.pull-right
        = link_to '#', data: {target: "#new-comment", toggle: "modal"} do
          .btn.btn-collab
            New Comment
      #sort
        %h5.inline
          Sort By:
        .btn.btn-collab
          Newest
        .btn.btn-collab
          Most Upvoted
    #comments
      - @post.comments.each do |comment|
        = render 'comments/card', comment: comment
  - else
    %h2.text-center
      Home of #{@project.name}
    %h3.text-center
      Click on a post or
      = link_to 'create one', new_post_path(project_id: @project.id)
      to start.

- if @post
  #new-comment.modal.fade{role: "dialog", tabindex: "-1"}
    .modal-dialog.modal-sm
      .modal-content
        .title
          New Comment
        = form_for Comment.new do |f|
          = f.hidden_field :commentable_id, value: @post.id
          = f.hidden_field :commentable_type, value: @post.class.to_s
          %h4 Content:
          .field
            = f.text_area :content, class: "form-control"
          .field
            = f.check_box :anonymous
            = f.label :anonymous
            %i
              (If you do not check anonymous, you will be labeled as unidentified member. When your post/comment is upvoted beyond the threshold and endorsed, you identity will be revealed).
          .actions
            = f.submit 'Comment', class: "btn btn-success"

#new-post.modal.fade{role: "dialog", tabindex: "-1"}
  .modal-dialog.modal-sm
    .modal-content
      .title
        New Post
      = form_for Post.new do |f|
        = f.hidden_field :user_id, value: current_user.id
        = f.hidden_field :project_id, value: @project.id
        .field
          = f.label :title
          = f.text_field :title, class: "form-control"
        .field
          = f.label :content
          = f.text_area :content, class: "form-control"
        .field
          = f.label :anonymous
          = f.check_box :anonymous
          %i
            (If you do not check anonymous, you will be labeled as unidentified member. When your post/comment is upvoted beyond the threshold and endorsed, you identity will be revealed).
        .field
          = f.label :threshold
          %p
            %i
              (The upvote threshold for comments in this post).
          = f.number_field :threshold, class: "form-control"
        .actions
          = f.submit 'Save', class: "btn btn-success"
